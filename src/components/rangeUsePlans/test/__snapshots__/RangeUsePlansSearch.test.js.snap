// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RangeUsePlansSearch renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RangeUsePlansSearch
    handleSearchInput={[Function]}
    label="label"
    placeholder="placeholder"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Input
        fluid={true}
        icon={true}
        loading={false}
        placeholder="placeholder"
        type="text"
>
        <input
                id="search"
                onChange={[Function]}
                value=""
        />
        <Icon
                as="i"
                name="search"
        />
</Input>,
      "className": "range-use-plans-search",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <input
            id="search"
            onChange={[Function]}
            value=""
/>,
          <Icon
            as="i"
            name="search"
/>,
        ],
        "fluid": true,
        "icon": true,
        "loading": false,
        "placeholder": "placeholder",
        "type": "text",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "id": "search",
            "onChange": [Function],
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": "i",
            "name": "search",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Input
          fluid={true}
          icon={true}
          loading={false}
          placeholder="placeholder"
          type="text"
>
          <input
                    id="search"
                    onChange={[Function]}
                    value=""
          />
          <Icon
                    as="i"
                    name="search"
          />
</Input>,
        "className": "range-use-plans-search",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <input
              id="search"
              onChange={[Function]}
              value=""
/>,
            <Icon
              as="i"
              name="search"
/>,
          ],
          "fluid": true,
          "icon": true,
          "loading": false,
          "placeholder": "placeholder",
          "type": "text",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "id": "search",
              "onChange": [Function],
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "as": "i",
              "name": "search",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
